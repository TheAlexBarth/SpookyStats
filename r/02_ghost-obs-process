set.seed(20241001) #set observation probabilities
library(ggplot2)
library(dplyr)
library(tidyr)


# read in ghost counts
ghosts <- read.csv('./data/ghost_counts.csv', header = F) |> 
  as.matrix()

# Observation probabilities
theta_reg <- 0.1  # Probability regular people detect a ghost
theta_hun <- 0.9  # Probability ghost hunters detect a ghost

# Time settings
T <- 100         # Total time steps
obs_times_reg <- sort(sample(1:T, (T/5)))  # Sparse regular observations
obs_times_hun <- sort(sample(1:T, (T/2)))  # More frequent ghost hunter observations

# Other params
n_houses <- 100

# Simulate regular observations
obs_data_reg <- ghost_counts[obs_times_reg, ] * rbinom(length(obs_times_reg) * n_houses, 
                                                       size = 1, prob = theta_reg)

# Simulate ghost hunter observations
n_hunters <- 5  # Number of ghost hunters

# Initialize observation matrix for ghost hunters
obs_data_hun <- matrix(NA, nrow = length(obs_times_hun), ncol = n_houses)

for (i in 1:length(obs_times_hun)) {
  # At each time step, randomly assign one house to be observed by a ghost hunter
  hunter_house <- sample(1:n_houses, size = n_hunters, replace = TRUE)
  
  # Ghost hunters observe only the selected house(s)
  for (house in hunter_house) {
    obs_data_hun[i, house] <- ghost_counts[obs_times_hun[i], house] * 
                              rbinom(1, size = 1, prob = theta_hun)
  }
}


# \- Plotting initial observational data --------

reg_obs <- as.data.frame(obs_data_reg)
reg_obs$time <- obs_times_reg # add time of obseravtion
reg_obs <- reg_obs |> 
  pivot_longer(-time, names_to = 'house',values_to = 'ghosts')

reg_obs$house <- reg_obs$house |> 
  sapply(function(x) gsub('V',"",x))

ggplot() +
  geom_tile(
    data = reg_obs,
    aes(
      x = time,
      y = house,
      fill = ghosts
    )
  ) +
  scale_fill_viridis_c() +
  theme_minimal()


hun_obs <- as.data.frame(obs_data_hun)
hun_obs$time <- obs_times_hun
hun_obs <- hun_obs |> 
  pivot_longer(-time, names_to = 'house',values_to = 'ghosts')

hun_obs$house <- hun_obs$house |> 
  sapply(function(x) gsub('V',"",x))

ggplot() +
  geom_tile(
    data = hun_obs,
    aes(
      x = time,
      y = house,
      fill = ghosts
    )
  ) +
  scale_fill_viridis_c() +
  theme_minimal()
